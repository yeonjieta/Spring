<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:s="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
    
    <!-- 1. 검사 URL jsp파일에서 파라미터를 action을 통해/login/loginForm 이렇게 보내면 여기로 파라미터가 날라온다 -->
	<!-- 2. 여기서 값을 받아서  UserDetailsService로 값이 가고 s:authentication-provider 내 함수에서 -->
	<!-- 평문과 평문의 값을 비교한다. 하지만 이 구조에서는 회원가입시 비밀번호를 솔트값으로 암호화를 진행하였기에 -->
	<!-- 따로 s:authentication-provider의 기능을 가진 클래스를 만들 필요가 있었다. -->
	<!-- 	그것을 아래처럼 <s:authentication-provider ref= 이렇게 지정함으로써 기능을 전가시킬수 있다 -->
    <s:http auto-config="true" use-expressions="true">
        <s:intercept-url pattern="/login/loginForm" access="permitAll" />
        <s:intercept-url pattern="/home" access="permitAll" />
        <s:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" /> 
        <s:intercept-url pattern="/**" access="permitAll" />
        <s:intercept-url pattern="/intro/**" access="hasRole('ROLE_USER')"/>
        <s:intercept-url pattern="/login/signup" access="permitAll "/>
        <s:intercept-url pattern="/resources/**" access="permitAll" />
        
        
        <s:form-login login-page="/login/loginForm"
                    default-target-url="/"
                    authentication-failure-url="/login/loginForm?error"
                    username-parameter="userid"
                    password-parameter="userpw" />
        <s:logout logout-url="/logout"
                logout-success-url="/" />
                
        <s:access-denied-handler error-page="/login/accessDenied" />
<!--        	csrf는 토큰방식으로 보안에는 좋지만 복잡하기 때문에 이번에는 보류 -->
        <s:csrf disabled="true"/>
    </s:http>
    
	<bean id="loginService" class="com.itbank.service.LoginService" />
	<bean id="userLoginAuthenticationProvider" class="com.itbank.service.UserLoginAuthenticationProvider" />
	
	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<s:authentication-manager>
	<s:authentication-provider ref="userLoginAuthenticationProvider"/>
</s:authentication-manager>
   
</beans>